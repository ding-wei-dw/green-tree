<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--加载引入外部的属性文件  -->
    <!-- 解析db.properties 因为 db.properties里面有username=root 如果在下面的数据源中使用${username}它取到的是当前系统的登陆名
		如果要使用db.properties里面的username必须加system-properties-mode="FALLBACK"这个属性 -->
    <context:property-placeholder location="classpath:database.properties"></context:property-placeholder>
    <!--配置数据源  -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${driver}"></property>
        <property name="url" value="${url}"></property>
        <property name="username" value="${user}"></property>
        <property name="password" value="${password}"></property>
    </bean>
    <!--SqlSessionFacotry对象  -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--依赖注入数据源对象-->
        <property name="dataSource" ref="dataSource"></property>
        <!--加载引入映射文件  -->

        <property name="mapperLocations">
            <list>
                <value>classpath:mapper/*.xml</value>
            </list>
        </property>
        <!--给实体类其别名-->
        <property name="typeAliasesPackage" value="com.pro.pojo"></property>
    </bean>
    <!--扫描接口,自动生成实例对象,对象的名字和接口名字一致,首字母小写  -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.pro.dao"></property>
    </bean>
    <!-- 自动扫描注解 -->
    <context:component-scan base-package="com.pro"></context:component-scan>

</beans>